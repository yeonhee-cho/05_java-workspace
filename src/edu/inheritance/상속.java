package edu.inheritance;

/**
 * 상속
 * 부모클래스에 작성한 것을
 * 자식클래스에서 자식 개별의 특징으로 물려 받는 것
 * 
 * super() : 자식 생성자에서 사용함, 
 *           부모에 작성한 this.변수이름을 생략 후 super()라는 명칭으로 작성
 *           super로 작성된 것은 반드시 메서드 내에서 제일 맨 윗 줄에 작성해야함
 *           그 후에 this.를 작성하거나 기능을 추가로 작성
 *
 * super. : 자식 메서드에서 사용
 *          부모 메서드를 참조하여 기능을 확장 추가하거나 새롭게 재사용할 때 사용
 *          super의 위치가 맨 위가 아니어도 괜찮음, 처음, 중간 끝 상관없음
 *          @Override : 이 기능은 부모 클래스에 작성된 기능을 재정의한다는 알림 표시
 *                      작성하지 않아도 동작하는데 문제가 되지는 않으나,
 *                      작성해서 재사용 표기를 해주는 것이 개발자 간의 예의
 */
public class 상속 {

}

/**
// 상속을 안 쓸 경우
public class 갤럭시 {
    // 전화, 문자, 인터넷, 게임, 사진 ... 모두 따로 구현
}
public class 아이폰 {
    // 전화, 문자, 인터넷, 게임, 사진 ... 모두 따로 구현
}
// 상속을 쓸 경우 : 
// - 같은 코드를 여러 번 쓰지 않아도 됨
// - 새로운 기능 추가 용이
// - 부모(스마트폰)만 고치면 자식(갤럭시, 아이폰)에 고쳐진 기능이 모두 적용
// 스마트폰의 기존 형태를 가져다 쓰기 때문에 개발 속도 빨라짐
public class 스마트폰{
    // 전화, 문자, 인터넷, 게임, 사진 ... 모두 따로 구현
}
public class 갤럭시 extends 스마트폰 {
    // 스마트폰의 전화, 문자 등 모든 기능을 자동으로 가져옴
    // 통화녹음
    // 플레이스토어 어플 다운 기능
}
public class 아이폰 extends 스마트폰 {
    // 스마트폰의 전화, 문자 등 모든 기능을 자동으로 가져옴
    // airdrop;
    // 앱스토어 어플 다운 기능
}
*/
